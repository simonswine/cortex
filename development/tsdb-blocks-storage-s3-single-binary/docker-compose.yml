version: '3.4'
services:

  consul:
    image: consul
    command: [ "agent", "-dev" ,"-client=0.0.0.0", "-log-level=info" ]
    ports:
      - 8500:8500

  minio:
    image: minio/minio
    command: [ "server", "/data" ]
    environment:
      - MINIO_ACCESS_KEY=cortex
      - MINIO_SECRET_KEY=supersecret
    ports:
      - 9000:9000
    volumes:
      - data-minio:/data
    entrypoint:
      - sh
      - -euc
      - mkdir -p /data/cortex-tsdb && mkdir -p /data/cortex-rules && /usr/bin/minio server /data

  prometheus:
    image: prom/prometheus:v2.16.0
    command: ["--config.file=/etc/prometheus/prometheus.yaml"]
    volumes:
      - ./config:/etc/prometheus
    ports:
      - 9090:9090

  # Scrape the metrics also with the Grafana agent (useful to test metadata ingestion
  # until metadata remote write is not supported by Prometheus).
  grafana-agent:
    image: grafana/agent:v0.2.0
    command: ["-config.file=/etc/agent-config/grafana-agent.yaml", "-prometheus.wal-directory=/tmp"]
    volumes:
      - ./config:/etc/agent-config
    ports:
      - 9091:9091

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686
      - "14268"

  cortex-1:
    build:
      context:    .
      dockerfile: dev.dockerfile
    image: cortex
    command: ["sh", "-c", "sleep 3 && exec ./cortex -config.file=./config/cortex.yaml -target=all -server.http-listen-port=8001 -server.grpc-listen-port=9001"]
    depends_on:
      - consul
      - minio
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=cortex-1
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    ports:
      - 8001:8001
    volumes:
      - ./config:/cortex/config:z
      - data-cortex-1:/data

  cortex-2:
    build:
      context:    .
      dockerfile: dev.dockerfile
    image: cortex
    command: ["sh", "-c", "sleep 3 && exec ./cortex -config.file=./config/cortex.yaml -target=all -server.http-listen-port=8002 -server.grpc-listen-port=9002"]
    depends_on:
      - consul
      - minio
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=cortex-2
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    ports:
      - 8002:8002
    volumes:
      - ./config:/cortex/config:z
      - data-cortex-2:/data

  haproxy:
    image: haproxy:2.2.2
    entrypoint:
      - sh
      - -euc
      - |
        cat > /etc/haproxy.cfg <<EOF
        defaults
            maxconn 4096
            mode http
            option forwardfor
            option http-server-close
            option redispatch
            retries 3
            timeout client 50000
            timeout connect 5000
            timeout server 50000

        frontend stats
          bind *:1936
          stats uri /
          stats show-legends timeout 2m
          no log

        userlist users
          user user-a insecure-password secret
          user user-b insecure-password secret
          user user-c insecure-password secret

        frontend http_front
          bind *:8000
          acl authorized http_auth(users)
          http-request auth realm Login if !authorized
          use_backend http_back if authorized

        backend http_back
          balance roundrobin
          http-request set-header X-Scope-OrgID %[req.hdr(Authorization)]
          http-request del-header Authorization
          server cortex-1 cortex-1:8001 check init-addr libc
          server cortex-2 cortex-2:8002 check init-addr libc
        EOF
        exec haproxy -f /etc/haproxy.cfg
    ports:
      - 8000:8000
      - 1936:1936
volumes:
  data-minio: {}
  data-cortex-1: {}
  data-cortex-2: {}
