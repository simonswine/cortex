version: '3.4'
services:

  consul:
    image: consul
    command: [ "agent", "-dev" ,"-client=0.0.0.0", "-log-level=info" ]
    ports:
      - 8500:8500

  minio:
    image: minio/minio
    command: [ "server", "/data" ]
    environment:
      - MINIO_ACCESS_KEY=cortex
      - MINIO_SECRET_KEY=supersecret
    ports:
      - 9000:9000
    volumes:
      - data-minio:/data
    entrypoint:
      - sh
      - -euc
      - mkdir -p /data/cortex-tsdb && mkdir -p /data/cortex-rules && /usr/bin/minio server /data

  prometheus:
    image: prom/prometheus:v2.16.0
    command: ["--config.file=/etc/prometheus/prometheus.yaml"]
    volumes:
      - ./config:/etc/prometheus
    ports:
      - 9090:9090

  # Scrape the metrics also with the Grafana agent (useful to test metadata ingestion
  # until metadata remote write is not supported by Prometheus).
  grafana-agent:
    image: grafana/agent:v0.2.0
    command: ["-config.file=/etc/agent-config/grafana-agent.yaml", "-prometheus.wal-directory=/tmp"]
    volumes:
      - ./config:/etc/agent-config
    ports:
      - 9091:9091

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686
      - "14268"

  cortex-1:
    build:
      context:    .
      dockerfile: dev.dockerfile
    image: cortex
    command: ["sh", "-c", "sleep 3 && exec ./cortex -config.file=./config/cortex.yaml -target=all -server.http-listen-port=8001 -server.grpc-listen-port=9001"]
    depends_on:
      - consul
      - minio
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=cortex-1
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    ports:
      - 8001:8001
    volumes:
      - ./config:/cortex/config:z
      - data-cortex-1:/data

  cortex-2:
    build:
      context:    .
      dockerfile: dev.dockerfile
    image: cortex
    command: ["sh", "-c", "sleep 3 && exec ./cortex -config.file=./config/cortex.yaml -target=all -server.http-listen-port=8002 -server.grpc-listen-port=9002"]
    depends_on:
      - consul
      - minio
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=cortex-2
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    ports:
      - 8002:8002
    volumes:
      - ./config:/cortex/config:z
      - data-cortex-2:/data

  traefik:
    image: traefik:v2.2.8
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/traefik/config
        cat > /etc/traefik/traefik.yaml <<"EOF"
        api:
          dashboard: true
          insecure: true
        providers:
          file:
            directory: /etc/traefik/config
            watch: true
        entryPoints:
          web:
           address: ":8000"
        EOF
        cat > /etc/traefik/config/cortex.yaml <<"EOF"
        http:
          routers:
            cortex:
              #entryPoints:
              #  - web
              rule: "PathPrefix(`/`)"
              middlewares:
                - auth
              service: "cortex"
          services:
            cortex:
              loadBalancer:
                healthCheck:
                  path: /ready
                servers:
                - url: http://cortex-1:8001
                - url: http://cortex-2:8002
          middlewares:
            auth:
              basicAuth:
                users:
                  - "user-a:$$apr1$$VmVBtFUs$$TnTCfILmXbhQRJyeDBcol0" # secret
                  - "user-b:$$apr1$$VmVBtFUs$$TnTCfILmXbhQRJyeDBcol0" # secret
                  - "user-c:$$apr1$$VmVBtFUs$$TnTCfILmXbhQRJyeDBcol0" # secret
                headerField: X-Scope-OrgID
                removeHeader: true
        EOF
        exec traefik
    ports:
      - 8000:8000

volumes:
  data-minio: {}
  data-cortex-1: {}
  data-cortex-2: {}
